import proj_1_image from '/public/image/proj-1.jpg';
import proj_2_image from '/public/image/proj-2.jpg';
import proj_3_image from '/public/image/proj-3.jpg';
import proj_4_image from '/public/image/proj-4.jpg';
import proj_5_image from '/public/image/proj-5.jpg';
import proj_6_image from '/public/image/proj-6.jpg';
import proj_7_image from '/public/image/proj-7.jpg';


export const projectsData = [
    {
        id: 1,
        name: 'Valinor',
        description: "The Client wanted to provide the users with a way to relive the best moments of their life in the most fantastic ways. The primary aim of this project was to create a bot that stores the entire life experience of the host and provides relatable answers to their access members. As the admin host creates their bot and stores life experience, they will have to answer a set of questions generated by the system and Open AI. Based on these questions, the AI bot can be trained. The admin can also invite others so that they can stay connected with him/her forever.",
        tools: ['Python', 'TensorFlow', 'OpenAI API', 'WebSocket', 'AWS S3', 'Docker', 'Nginx'],
        role: '',
        code: '',
        demo: '',
        image: proj_1_image,
    },
    {
        id: 2,
        name: 'ATM Fraud Detection',
        description: 'The engine was written in Python and C++. If someone stays long in front of the ATM, the camera detects this event and creates a bookmark including timestamp, duration, etc.Then this bookmark is used to analyze the transaction. If there is no transaction, this means that he/she who stands in front of the ATM is not performing transactions. The YOLOv3 model is used to detect humans. For the camera video stream, OpenCV FFMPEG was used',
        tools: ['Python', 'C++', "OpenCV", "Yolo"],
        role: '',
        code: '',
        demo: '',
        image: proj_2_image,
    },
    {
        id: 3,
        name: 'Facilitor',
        description: "Facilitor provides a full-scale platform for homeowners and buyers to communicate and complete a real estate transaction without the need for real estate agents. When users see a house they want to buy, they sign up to become a Facilitor member. Facilitor helps them get pre-approved so that they can tour and purchase their next home. For first-time home buyers, there is no hassle, the platform guides users through the process. The platforms step by step provides all the resources necessary to make the first home-buying experience easy.",
        tools: ['Python', 'Keras', 'SCSS', 'Stripe', 'Express', 'TypeScript', 'MongoDB', 'OpenAI API', 'Replicate AI', 'Cronjob', 'JWT'],
        code: '',
        role: '',
        demo: 'https://invezz.com/',
        image: proj_3_image,
    },
    {
        id: 4,
        name: 'Face Mask Detection',
        description: "Created a Face Mask detection system combining the best of Facial recognition and computer vision. The system tracks people, analyzes faces and generates alerts if necessary. A state of the art Facial recognition system with real time performance, we implemented it in C++ to guarantee stable and seamless deployability. It can work on multiple cameras simultaneously making it equally ideal for small businesses, public sectors (healthcare, transport, schools etc.) and large enterprises with use cases like smart cities.",
        tools: ['C++', 'Computer Vision', 'OpenCV', 'Python', 'Keras'],
        code: '',
        demo: 'https://www.gsdiamonds.com.au/',
        image: proj_4_image,
        role: '',
    },
    {
        id: 5,
        name: 'Glove Detection',
        description: "Created an AI-powered Glove detection system. A safety and prevention system that is designed to work for any industry, pandemic situation or business. Wearing gloves is a key safety measure for so many reasons and in so many use cases especially high risk scenarios like hospitals, food or even construction. We designed a system that would for any industry by tracking people with an assigned id, check if they are wearing gloves and generate alerts against a persons id if they are not wearing gloves",
        tools: ['C++', 'Computer Vision', 'OpenCV', 'Python', 'Keras'],
        code: '',
        demo: 'https://www.dialogue.co/en/',
        image: proj_5_image,
        role: '',
    },
    {
        id: 6,
        name: 'Akiba Digital',
        description: "The project involved implementing an RFM (Recency, Frequency, Monetary) based customer segmentation model to help a client strategically market their business. By analyzing customer data through SQL queries and applying various clustering techniques such as DBSCAN, Agglomerative Clustering, and K-means, the team developed an ensemble learning algorithm to effectively segment customers based on demographic and financial factors. ",
        tools: ['Python', 'Pandas', 'Numpy', 'Scipy', 'Python Flask', 'Git'],
        code: '',
        demo: 'https://voxy.com/',
        image: proj_6_image,
        role: 'Fronted Developer',
    },
    {
        id: 7,
        name: 'Verbal Victory',
        description: "The goal of this project was to determine different voice variations occurring during a speech. These variations can be high, low, pause, soft, stretch, etc. For training an audio classifier, labeled data was necessary, so an audio annotator tool was developed. The annotator tool was able to annotate the audio files using two methods: Time-based annotations and  Word-based annotations. After the annotations against each word are acquired from hundreds of audio clips, an audio classifier will be trained to classify each spoken word into one of the sound variations.",
        tools: ['Python', 'Scikit-learn', 'Keras', 'Git', 'Docker', 'Librosa'],
        code: '',
        demo: 'https://www.daq.net/',
        image: proj_7_image,
        role: 'Fronted Developer',
    },
];


// Do not remove any property.
// Leave it blank instead as shown below

// {
//     id: 1,
//     name: '',
//     description: "",
//     tools: [],
//     role: '',
//     code: '',
//     demo: '',
//     image: crefin,
// },